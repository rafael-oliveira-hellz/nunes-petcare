import MockDate from "mockdate";
import { {{pascalCase name}}Entity } from "./{{pascalCase name}}Entity";

export const {{camelCase name}}EntityMock = {
    _id: "5f7b5f9b0b9b9b0b9b0b9b0b",
    createdById: "5f7b5f9b0b9b9b0b9b0b9b0b",
    name: "{{pascalCase name}} name",
    active: true,
    createdAt: new Date(),
    updatedAt: new Date(),
};

export const {{camelCase name}}EntityPaginatedMock = {
    categories: [
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
        {{camelCase name}}EntityMock,
    ],
    total: 15,
};

describe("{{pascalCase name}}Entity", () => {
    beforeAll(() => {
        MockDate.set(new Date());
    });

    afterAll(() => {
        MockDate.reset();
    });

    it("should create a {{pascalCase name}} entity", () => {
        const {{camelCase name}}Entity = new {{pascalCase name}}Entity({{camelCase name}}EntityMock);
        expect({{camelCase name}}Entity).toBeTruthy();
        expect({{camelCase name}}Entity).toEqual({
            ...{{camelCase name}}EntityMock,
            _id: undefined,
            active: false,
            createdAt: new Date(),
            updatedAt: new Date(),
        });
    });
});
